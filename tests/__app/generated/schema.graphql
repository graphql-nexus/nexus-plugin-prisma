### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AffectedRowsOutput {
  count: Int!
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Bubble {
  createdAt: DateTime!
  id: String!
  members(after: UserWhereUniqueInput, orderBy: [BubbleMembersOrderByInput!], where: BubbleMembersWhereInput): [User!]!
}

input BubbleCreateNestedOneWithoutMembersInput {
  connect: BubbleWhereUniqueInput
  connectOrCreate: BubbleCreateOrConnectWithoutMembersInput
  create: BubbleCreateWithoutMembersInput
}

input BubbleCreateOrConnectWithoutMembersInput {
  create: BubbleCreateWithoutMembersInput!
  where: BubbleWhereUniqueInput!
}

input BubbleCreateWithoutMembersInput {
  createdAt: DateTime
  id: String
  private: Boolean!
}

input BubbleMembersOrderByInput {
  firstName: SortOrder
  locationId: SortOrder
}

input BubbleMembersWhereInput {
  id: StringFilter
  location: LocationWhereInput
}

input BubbleWhereInput {
  AND: [BubbleWhereInput!]
  NOT: [BubbleWhereInput!]
  OR: [BubbleWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  members: UserListRelationFilter
  private: BoolFilter
}

input BubbleWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumPostStatusFieldUpdateOperationsInput {
  set: PostStatus
}

input EnumPostStatusFilter {
  equals: PostStatus
  in: [PostStatus!]
  not: NestedEnumPostStatusFilter
  notIn: [PostStatus!]
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Location {
  city: String!
  country: String!
  id: Int!
}

input LocationCreateNestedOneWithoutUserInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutUserInput
  create: LocationCreateWithoutUserInput
}

input LocationCreateOrConnectWithoutUserInput {
  create: LocationCreateWithoutUserInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateWithoutUserInput {
  city: String!
  country: String!
}

input LocationWhereInput {
  AND: [LocationWhereInput!]
  NOT: [LocationWhereInput!]
  OR: [LocationWhereInput!]
  User: UserListRelationFilter
  city: StringFilter
  country: StringFilter
  id: IntFilter
}

input LocationWhereUniqueInput {
  id: Int
}

type Mutation {
  createOnePost(data: PostCreateInput!): Post!
  updateManyPost(data: PostUpdateManyMutationInput!, where: PostWhereInput): AffectedRowsOutput!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumPostStatusFilter {
  equals: PostStatus
  in: [PostStatus!]
  not: NestedEnumPostStatusFilter
  notIn: [PostStatus!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Post {
  authors: [User!]!
  id: Int!
  status: PostStatus!
}

input PostCreateInput {
  authors: UserCreateNestedManyWithoutPostsInput
  likes: Int!
  rating: Float!
  status: PostStatus!
}

input PostListRelationFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

input PostOrderByWithRelationInput {
  authors: UserOrderByRelationAggregateInput
  id: SortOrder
  likes: SortOrder
  rating: SortOrder
  status: SortOrder
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

input PostUpdateManyMutationInput {
  likes: IntFieldUpdateOperationsInput
  rating: FloatFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
}

input PostWhereInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  authors: UserListRelationFilter
  id: IntFilter
  likes: IntFilter
  rating: FloatFilter
  status: EnumPostStatusFilter
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  firstName: String!
  id: String!
  location: Location!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [PostOrderByWithRelationInput!], where: PostWhereInput): [Post!]!
}

input UserCreateNestedManyWithoutPostsInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutPostsInput!]
  create: [UserCreateWithoutPostsInput!]
}

input UserCreateOrConnectWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutPostsInput {
  Bubble: BubbleCreateNestedOneWithoutMembersInput
  firstName: String!
  id: String
  lastName: String!
  location: LocationCreateNestedOneWithoutUserInput!
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserWhereInput {
  AND: [UserWhereInput!]
  Bubble: BubbleWhereInput
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  bubbleId: StringNullableFilter
  firstName: StringFilter
  id: StringFilter
  lastName: StringFilter
  location: LocationWhereInput
  locationId: IntFilter
  posts: PostListRelationFilter
}

input UserWhereUniqueInput {
  id: String
}