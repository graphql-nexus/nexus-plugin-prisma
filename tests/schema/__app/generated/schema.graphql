### This file was generated by Nexus Schema
### Do not make changes to this file directly


type BatchPayload {
  count: Int!
}

type Bubble {
  createdAt: DateTime!
  id: String!
  members(after: UserWhereUniqueInput, orderBy: BubbleMembersOrderByInput, where: BubbleMembersWhereInput): [User!]!
}

input BubbleCreateOneWithoutMembersInput {
  connect: BubbleWhereUniqueInput
  create: BubbleCreateWithoutMembersInput
}

input BubbleCreateWithoutMembersInput {
  createdAt: DateTime
  id: String
}

input BubbleMembersOrderByInput {
  firstName: OrderByArg
}

input BubbleMembersWhereInput {
  id: StringFilter
}

input BubbleWhereInput {
  AND: [BubbleWhereInput!]
  createdAt: DateTimeFilter
  id: UUIDFilter
  members: UserFilter
  NOT: [BubbleWhereInput!]
  OR: [BubbleWhereInput!]
}

input BubbleWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
  notIn: [Float!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type Mutation {
  createOnePost(data: PostCreateInput!): Post!
  updateManyPost(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
}

input NullableStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

enum OrderByArg {
  asc
  desc
}

type Post {
  authors: [User!]!
  status: PostStatus!
}

input PostCreateInput {
  authors: UserCreateManyWithoutPostsInput
  rating: Float!
  status: PostStatus!
}

input PostFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

input PostOrderByInput {
  id: OrderByArg
  rating: OrderByArg
  status: OrderByArg
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

input PostUpdateManyMutationInput {
  id: Int
  rating: Float
  status: PostStatus
}

input PostWhereInput {
  AND: [PostWhereInput!]
  authors: UserFilter
  id: IntFilter
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  rating: FloatFilter
  status: PostStatus
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type User {
  firstName: String!
  id: String!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: PostOrderByInput, where: PostWhereInput): [Post!]!
}

input UserCreateManyWithoutPostsInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutPostsInput!]
}

input UserCreateWithoutPostsInput {
  Bubble: BubbleCreateOneWithoutMembersInput
  firstName: String!
  id: String
  lastName: String!
}

input UserFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  Bubble: BubbleWhereInput
  bubbleId: NullableStringFilter
  firstName: StringFilter
  id: StringFilter
  lastName: StringFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  posts: PostFilter
}

input UserWhereUniqueInput {
  id: String
}

scalar UUID

input UUIDFilter {
  contains: UUID
  endsWith: UUID
  equals: UUID
  gt: UUID
  gte: UUID
  in: [UUID!]
  lt: UUID
  lte: UUID
  not: UUID
  notIn: [UUID!]
  startsWith: UUID
}
